name:                   accelerate-blas
version:                0.1.0.0
synopsis:               Numeric Linear Algebra in Accelerate
description:
  Linear systems, matrix decompositions, and other numerical computations for
  use in Accelerate. Most operations are implemented efficiently via FFI calls
  to BLAS and LAPACK
  .
  For further information refer to the main /Accelerate/ package:
  <http://hackage.haskell.org/package/accelerate>

license:                BSD3
license-file:           LICENSE
author:                 Trevor L. McDonell
maintainer:             tmcdonell@cse.unsw.edu.au
category:               Math
build-type:             Simple
extra-source-files:     CHANGELOG.md
cabal-version:          >=1.10

Flag llvm-cpu
  Description:          Enable the LLVM backend for multicore CPUs
  Default:              False

Flag llvm-ptx
  Description:          Enable the LLVM PTX backend for NVIDIA GPUs
  Default:              False


library
  default-language:     Haskell2010
  exposed-modules:
    Data.Array.Accelerate.Numeric.LinearAlgebra
    Data.Array.Accelerate.Numeric.LinearAlgebra.BLAS.Level1
    Data.Array.Accelerate.Numeric.LinearAlgebra.BLAS.Level2
    Data.Array.Accelerate.Numeric.LinearAlgebra.BLAS.Level3

  other-modules:
    Data.Array.Accelerate.Numeric.LinearAlgebra.Type

  build-depends:
        base                            >= 4.7 && < 4.11
      , accelerate                      == 1.0.*

  ghc-options:
      -O2
      -Wall

  if flag(llvm-cpu)
    CPP-options:        -DACCELERATE_LLVM_NATIVE_BACKEND
    build-depends:
        accelerate-llvm-native          == 1.0.*
      , blas-hs                         >= 0.1
      , storable-complex                >= 0.2

    cc-options:
      -O3
      -Wall
      -march=native

    c-sources:
      cbits/twine_f32.c
      cbits/twine_f64.c

    other-modules:
      Data.Array.Accelerate.Numeric.LinearAlgebra.LLVM.Native.Base
      Data.Array.Accelerate.Numeric.LinearAlgebra.LLVM.Native.Level2
      Data.Array.Accelerate.Numeric.LinearAlgebra.LLVM.Native.Level3

-- vim: nospell
